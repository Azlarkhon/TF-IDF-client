/*
TF-IDF counter API

API for document processing using TF-IDF algorithm

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelsWord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsWord{}

// ModelsWord struct for ModelsWord
type ModelsWord struct {
	Count *int32 `json:"count,omitempty"`
	Word *string `json:"word,omitempty"`
}

// NewModelsWord instantiates a new ModelsWord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsWord() *ModelsWord {
	this := ModelsWord{}
	return &this
}

// NewModelsWordWithDefaults instantiates a new ModelsWord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsWordWithDefaults() *ModelsWord {
	this := ModelsWord{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ModelsWord) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWord) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ModelsWord) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ModelsWord) SetCount(v int32) {
	o.Count = &v
}

// GetWord returns the Word field value if set, zero value otherwise.
func (o *ModelsWord) GetWord() string {
	if o == nil || IsNil(o.Word) {
		var ret string
		return ret
	}
	return *o.Word
}

// GetWordOk returns a tuple with the Word field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWord) GetWordOk() (*string, bool) {
	if o == nil || IsNil(o.Word) {
		return nil, false
	}
	return o.Word, true
}

// HasWord returns a boolean if a field has been set.
func (o *ModelsWord) HasWord() bool {
	if o != nil && !IsNil(o.Word) {
		return true
	}

	return false
}

// SetWord gets a reference to the given string and assigns it to the Word field.
func (o *ModelsWord) SetWord(v string) {
	o.Word = &v
}

func (o ModelsWord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsWord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Word) {
		toSerialize["word"] = o.Word
	}
	return toSerialize, nil
}

type NullableModelsWord struct {
	value *ModelsWord
	isSet bool
}

func (v NullableModelsWord) Get() *ModelsWord {
	return v.value
}

func (v *NullableModelsWord) Set(val *ModelsWord) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsWord) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsWord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsWord(val *ModelsWord) *NullableModelsWord {
	return &NullableModelsWord{value: val, isSet: true}
}

func (v NullableModelsWord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsWord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


