/*
TF-IDF counter API

API for document processing using TF-IDF algorithm

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StatusGet200ResponseAllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusGet200ResponseAllOfData{}

// StatusGet200ResponseAllOfData struct for StatusGet200ResponseAllOfData
type StatusGet200ResponseAllOfData struct {
	Status *string `json:"status,omitempty"`
}

// NewStatusGet200ResponseAllOfData instantiates a new StatusGet200ResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusGet200ResponseAllOfData() *StatusGet200ResponseAllOfData {
	this := StatusGet200ResponseAllOfData{}
	return &this
}

// NewStatusGet200ResponseAllOfDataWithDefaults instantiates a new StatusGet200ResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusGet200ResponseAllOfDataWithDefaults() *StatusGet200ResponseAllOfData {
	this := StatusGet200ResponseAllOfData{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *StatusGet200ResponseAllOfData) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGet200ResponseAllOfData) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *StatusGet200ResponseAllOfData) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *StatusGet200ResponseAllOfData) SetStatus(v string) {
	o.Status = &v
}

func (o StatusGet200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusGet200ResponseAllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableStatusGet200ResponseAllOfData struct {
	value *StatusGet200ResponseAllOfData
	isSet bool
}

func (v NullableStatusGet200ResponseAllOfData) Get() *StatusGet200ResponseAllOfData {
	return v.value
}

func (v *NullableStatusGet200ResponseAllOfData) Set(val *StatusGet200ResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusGet200ResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusGet200ResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusGet200ResponseAllOfData(val *StatusGet200ResponseAllOfData) *NullableStatusGet200ResponseAllOfData {
	return &NullableStatusGet200ResponseAllOfData{value: val, isSet: true}
}

func (v NullableStatusGet200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusGet200ResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


