/*
TF-IDF counter API

Testing DocumentsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/Azlarkhon/TF-IDF-client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_DocumentsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DocumentsAPIService DocumentsDocumentIdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var documentId string

		resp, httpRes, err := apiClient.DocumentsAPI.DocumentsDocumentIdDelete(context.Background(), documentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentsAPIService DocumentsDocumentIdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var documentId string

		resp, httpRes, err := apiClient.DocumentsAPI.DocumentsDocumentIdGet(context.Background(), documentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentsAPIService DocumentsDocumentIdHuffmanGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var documentId string

		resp, httpRes, err := apiClient.DocumentsAPI.DocumentsDocumentIdHuffmanGet(context.Background(), documentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentsAPIService DocumentsDocumentIdStatisticsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var documentId string

		resp, httpRes, err := apiClient.DocumentsAPI.DocumentsDocumentIdStatisticsGet(context.Background(), documentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentsAPIService DocumentsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DocumentsAPI.DocumentsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
