/*
TF-IDF counter API

API for document processing using TF-IDF algorithm

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StatusGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusGet200Response{}

// StatusGet200Response struct for StatusGet200Response
type StatusGet200Response struct {
	Data *StatusGet200ResponseAllOfData `json:"data,omitempty"`
	Error *string `json:"error,omitempty"`
	IsSuccess *bool `json:"is_success,omitempty"`
}

// NewStatusGet200Response instantiates a new StatusGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusGet200Response() *StatusGet200Response {
	this := StatusGet200Response{}
	return &this
}

// NewStatusGet200ResponseWithDefaults instantiates a new StatusGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusGet200ResponseWithDefaults() *StatusGet200Response {
	this := StatusGet200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *StatusGet200Response) GetData() StatusGet200ResponseAllOfData {
	if o == nil || IsNil(o.Data) {
		var ret StatusGet200ResponseAllOfData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGet200Response) GetDataOk() (*StatusGet200ResponseAllOfData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *StatusGet200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given StatusGet200ResponseAllOfData and assigns it to the Data field.
func (o *StatusGet200Response) SetData(v StatusGet200ResponseAllOfData) {
	o.Data = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *StatusGet200Response) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGet200Response) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *StatusGet200Response) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *StatusGet200Response) SetError(v string) {
	o.Error = &v
}

// GetIsSuccess returns the IsSuccess field value if set, zero value otherwise.
func (o *StatusGet200Response) GetIsSuccess() bool {
	if o == nil || IsNil(o.IsSuccess) {
		var ret bool
		return ret
	}
	return *o.IsSuccess
}

// GetIsSuccessOk returns a tuple with the IsSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGet200Response) GetIsSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuccess) {
		return nil, false
	}
	return o.IsSuccess, true
}

// HasIsSuccess returns a boolean if a field has been set.
func (o *StatusGet200Response) HasIsSuccess() bool {
	if o != nil && !IsNil(o.IsSuccess) {
		return true
	}

	return false
}

// SetIsSuccess gets a reference to the given bool and assigns it to the IsSuccess field.
func (o *StatusGet200Response) SetIsSuccess(v bool) {
	o.IsSuccess = &v
}

func (o StatusGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.IsSuccess) {
		toSerialize["is_success"] = o.IsSuccess
	}
	return toSerialize, nil
}

type NullableStatusGet200Response struct {
	value *StatusGet200Response
	isSet bool
}

func (v NullableStatusGet200Response) Get() *StatusGet200Response {
	return v.value
}

func (v *NullableStatusGet200Response) Set(val *StatusGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusGet200Response(val *StatusGet200Response) *NullableStatusGet200Response {
	return &NullableStatusGet200Response{value: val, isSet: true}
}

func (v NullableStatusGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


